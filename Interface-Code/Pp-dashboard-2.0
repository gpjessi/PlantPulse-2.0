<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <title>PlantPulse</title>

  <!-- Fonts & Icons -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

  <style>
    *{margin:0;padding:0;box-sizing:border-box}
    :root{
      --green-1:#0e6b3a;
      --green-2:#2e8b57;
      --green-3:#a8d5b7;
      --leaf:#0b3d2e;
      --paper:#ffffff;
      --ink:#333;
      --mute:#777;
      --shadow:0 6px 16px rgba(0,0,0,.10);
      --radius:16px;
    }
    html,body{height:100%}
    body{
      font-family:'Poppins',sans-serif; color:var(--ink);
      background:
        radial-gradient(60% 80% at 20% 10%, #eaf7ef 0%, #d6efe1 35%, #c3e6d3 60%, #b8e0cc 100%) fixed;
      padding: 20px;
    }
    .container{max-width:1200px;margin:0 auto}

    /* ---------- NAV (simple top bar) ---------- */
    .topbar{display:flex;align-items:center;gap:12px;margin-bottom:18px}
    .brand{
      display:flex;align-items:center;gap:10px;font-weight:700;color:var(--leaf)
    }
    .brand i{color:var(--green-2)}
    .crumbs{margin-left:auto;color:var(--mute);font-size:.9rem}

    /* ---------- SECTIONS (simple SPA) ---------- */
    section{display:none}
    section.active{display:block}

    /* ---------- LANDING ---------- */
    .landing{
      background: linear-gradient(135deg, #e9f7ee 0%, #cfead9 50%, #b9e0cf 100%);
      border-radius: 28px; box-shadow: var(--shadow);
      padding: clamp(24px, 6vw, 64px);
      position: relative; overflow: hidden; min-height: 58vh;
    }
    .landing h1{
      font-size: clamp(2.2rem, 7vw, 5rem);
      line-height: 1.0; color:#073b2c; letter-spacing:.5px
    }
    .landing p{margin-top:14px;color:#23483c;font-weight:300;font-size:clamp(1rem,2.2vw,1.25rem)}
    .cta{
      margin-top:28px; display:inline-flex; align-items:center; gap:10px;
      border:none; border-radius: 999px; padding: 14px 22px; font-size:1.05rem;
      background: #0f5234; color:white; cursor:pointer; box-shadow: var(--shadow)
    }
    .cta:hover{transform:translateY(-1px)}
    /* layered leaves */
    .leafs, .leafs:before, .leafs:after{
      position:absolute; right:-12%; bottom:-12%; width:60vmin; height:60vmin; border-radius:50%;
      background: radial-gradient(closest-side, #0b3d2e, transparent 70%);
      filter: blur(18px); opacity:.12; pointer-events:none;
    }
    .leafs:before{content:""; right:14%; bottom:6%; width:50vmin; height:50vmin; opacity:.15}
    .leafs:after{content:""; right:-2%; bottom:22%; width:40vmin; height:40vmin; opacity:.18}

    /* ---------- PLANT PICKER ---------- */
    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:20px}
    .card{
      background:var(--paper); border-radius:var(--radius); box-shadow:var(--shadow);
      padding:22px; display:flex; flex-direction:column; gap:12px;
    }
    .card h3{color:var(--green-2);font-size:1.2rem}
    .tag{font-size:.8rem;color:#0b3d2e;background:#dbf2e5;padding:6px 10px;border-radius:999px;display:inline-block}
    .go{
      margin-top:auto; align-self:flex-start; border:1px solid #cde6d8; color:#0f5234;
      background:#e8f7ee; border-radius:999px; padding:10px 14px; cursor:pointer
    }
    .go:hover{background:#dff4e8}

    /* ---------- DASHBOARD (original styles) ---------- */
    header{ text-align:center; margin-bottom: 1.2rem; }
    h1.title{ font-weight:600; color:var(--green-2); font-size:2.4rem; margin-bottom:.4rem }
    .subtitle{ color:#666; font-weight:300 }

    .status-bar{
      background:#fff;border-radius:12px;padding:14px;margin-bottom:1.2rem;
      box-shadow:var(--shadow);text-align:center;font-size:.9rem;color:#666
    }
    #last-updated{font-style:italic}

    .dashboard-grid{
      display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));
      gap:20px;margin-bottom:1.2rem
    }
    .data-card{
      background:#fff;border-radius:var(--radius);padding:25px;display:flex;flex-direction:column;
      align-items:center;text-align:center;box-shadow:var(--shadow);transition:transform .3s ease
    }
    .data-card:hover{transform:translateY(-5px)}
    .card-icon{font-size:2.5rem;margin-bottom:15px}
    .soil-icon{color:#8B4513}
    .light-icon{color:#FFD700}
    .temp-icon{color:#DC143C}
    .humidity-icon{color:#4169E1}
    .card-label{font-size:.9rem;text-transform:uppercase;letter-spacing:1px;color:#888;margin-bottom:8px}
    .card-value{font-size:2.2rem;font-weight:600;margin-bottom:5px}
    .card-unit{font-size:.9rem;color:#888}
    .alert{padding:12px;border-radius:12px;margin-top:10px;font-size:.85rem;display:none}
    .alert-warning{background:#FFF3CD;color:#856404;border-left:4px solid #FFC107}
    .alert-info{background:#D1ECF1;color:#0C5460;border-left:4px solid #0DCAF0}

    .footer{text-align:center;margin-top:1.2rem;color:#888;font-size:.8rem}
    @keyframes pulse{0%{opacity:1}50%{opacity:.5}100%{opacity:1}}
    .loading{animation:pulse 1.5s infinite;color:#ccc!important}

    .toolbar{display:flex;gap:10px;margin:.4rem 0 1rem}
    .link{border:none;background:transparent;color:#0f5234;cursor:pointer}
    .link:hover{text-decoration:underline}
  </style>
</head>
<body>
  <div class="container">
    <div class="topbar">
      <div class="brand"><i class="fas fa-seedling"></i> PlantPulse</div>
      <div class="crumbs" id="crumbs">Home</div>
    </div>

    <!-- ============ SECTION: LANDING ============ -->
    <section id="landing" class="landing active" aria-labelledby="hero-title">
      <h1 id="hero-title">Grow with Peace of Mind</h1>
      <p>Monitor moisture, light, temperature, and humidity in real time. Pick a plant to see live data.</p>
      <button class="cta" onclick="goto('plants')">
        <i class="fas fa-play"></i> Start
      </button>
      <div class="leafs"></div>
    </section>

    <!-- ============ SECTION: PLANT PICKER ============ -->
    <section id="plants" class="plants">
      <header style="text-align:center;margin-bottom:1.2rem">
        <h1 class="title"><i class="fas fa-leaf"></i> Choose a Plant</h1>
        <p class="subtitle">Each plant has its own profile</p>
      </header>

      <div class="grid" id="plant-grid">
        <!-- Cards are injected by JS from the plants[] list -->
      </div>

      <div class="toolbar" style="justify-content:center">
        <button class="link" onclick="goto('landing')">← Back to Home</button>
      </div>
    </section>

    <!-- ============ SECTION: DASHBOARD (per plant) ============ -->
    <section id="dashboard">
      <header>
        <h1 class="title" id="plant-title"><i class="fas fa-seedling"></i> PlantPulse Dashboard</h1>
        <p class="subtitle" id="plant-subtitle">Live monitoring for your smart garden</p>
      </header>

      <div class="toolbar">
        <button class="link" onclick="goto('plants')">← All Plants</button>
        <span class="tag" id="plant-tag">Profile</span>
      </div>

      <div class="status-bar">
        <p>
          <span>System Status: <span id="connection-status">Connecting...</span></span>
          &nbsp;|&nbsp; <span>Last Updated: <span id="last-updated">--</span></span>
        </p>
      </div>

      <div class="dashboard-grid">
        <!-- Soil -->
        <div class="data-card">
          <div class="card-icon soil-icon"><i class="fas fa-tint"></i></div>
          <div class="card-label">Soil Moisture</div>
          <div class="card-value" id="soil-value">--</div>
          <div class="card-unit">%</div>
          <div id="soil-alert" class="alert alert-warning">Soil is getting dry!</div>
        </div>

        <!-- Light -->
        <div class="data-card">
          <div class="card-icon light-icon"><i class="fas fa-sun"></i></div>
          <div class="card-label">Light Level</div>
          <div class="card-value" id="light-value">--</div>
          <div class="card-unit">%</div>
          <div id="light-alert" class="alert alert-info">Plant needs more light!</div>
        </div>

        <!-- Temp -->
        <div class="data-card">
          <div class="card-icon temp-icon"><i class="fas fa-thermometer-half"></i></div>
          <div class="card-label">Temperature</div>
          <div class="card-value" id="temp-value">--</div>
          <div class="card-unit">°F</div>
        </div>

        <!-- Humidity -->
        <div class="data-card">
          <div class="card-icon humidity-icon"><i class="fas fa-cloud-rain"></i></div>
          <div class="card-label">Humidity</div>
          <div class="card-value" id="hum-value">--</div>
          <div class="card-unit">%</div>
        </div>
      </div>

      <div class="footer">
        <p>PlantPulse System • Data updates every 3 seconds</p>
      </div>
    </section>
  </div>

  <script>
    /*  SIMPLE SPA ROUTER */
    const views = ["landing","plants","dashboard"];
    function goto(id){
      views.forEach(v => document.getElementById(v).classList.remove("active"));
      document.getElementById(id).classList.add("active");
      document.getElementById('crumbs').textContent =
        id === "landing" ? "Home" :
        id === "plants" ? "Home › Plants" :
        `Home › Plants › ${activePlant?.name ?? ""}`;
      // when entering dashboard, start fetching
      if(id === "dashboard"){ startPolling(); }
      else { stopPolling(); }
    }

    /*PLANT LIST  */
    // Give each plant its own API. For demo, both can point to the same ESP32.
    const plants = [
      {
        id:"basil",
        name:"Basil",
        tag:"Herb • Indoor",
        api:"http://192.168.1.73/api/sensordata" // <--  ESP32
      },
      {
        id:"demo",
        name:"Demo Plant",
        tag:"Houseplant • Sample",
        api:"http://192.168.1.73/api/sensordata" // same endpoint for class demo
      }
    ];

    const grid = document.getElementById('plant-grid');
    plants.forEach(p => {
      const card = document.createElement('div');
      card.className = 'card';
      card.innerHTML = `
        <h3><i class="fas fa-leaf"></i> ${p.name}</h3>
        <span class="tag">${p.tag}</span>
        <p style="color:#666;font-size:.9rem">Live sensor profile with moisture, light, temperature, and humidity.</p>
        <button class="go">Open profile</button>
      `;
      card.querySelector('.go').addEventListener('click', () => openPlant(p.id));
      grid.appendChild(card);
    });

    let activePlant = null;

    function openPlant(id){
      activePlant = plants.find(p => p.id === id);
      // Update labels
      document.getElementById('plant-title').innerHTML = `<i class="fas fa-seedling"></i> ${activePlant.name}`;
      document.getElementById('plant-subtitle').textContent = 'Live monitoring';
      document.getElementById('plant-tag').textContent = activePlant.tag;
      goto('dashboard');
    }

    /* DASHBOARD LOGIC  */
    // Elements
    const soilElement  = document.getElementById('soil-value');
    const lightElement = document.getElementById('light-value');
    const tempElement  = document.getElementById('temp-value');
    const humElement   = document.getElementById('hum-value');
    const lastUpdatedElement = document.getElementById('last-updated');
    const soilAlert = document.getElementById('soil-alert');
    const lightAlert = document.getElementById('light-alert');
    const connectionStatus = document.getElementById('connection-status');

    function updateTime(){
      const now = new Date();
      lastUpdatedElement.textContent = now.toLocaleTimeString();
    }

    function checkAlerts(soilPct, lightPct){
      const soilDry = soilPct < 30;
      const lightLow = lightPct < 20;
      soilAlert.style.display = soilDry ? 'block' : 'none';
      lightAlert.style.display = lightLow ? 'block' : 'none';
    }

    let timer = null;

    function stopPolling(){
      if(timer){ clearInterval(timer); timer = null; }
    }

    async function fetchData(){
      if(!activePlant) return;
      try{
        [soilElement, lightElement, tempElement, humElement].forEach(el => el.classList.add('loading'));
        const response = await fetch(activePlant.api, { cache: 'no-store' });
        const data = await response.json();

        // API returns 0–100 for soil_moisture/light_level + temp °F + humidity %
        soilElement.textContent  = Number(data.soil_moisture).toFixed(0);
        lightElement.textContent = Number(data.light_level).toFixed(0);
        tempElement.textContent  = Number(data.temperature).toFixed(1);
        humElement.textContent   = Number(data.humidity).toFixed(1);

        [soilElement, lightElement, tempElement, humElement].forEach(el => el.classList.remove('loading'));

        checkAlerts(data.soil_moisture, data.light_level);
        connectionStatus.textContent = '✅ Connected'; connectionStatus.style.color = 'green';
        updateTime();
      } catch (err){
        console.error('Error fetching data:', err);
        connectionStatus.textContent = '❌ Connection Error'; connectionStatus.style.color = 'red';
      }
    }

    function startPolling(){
      // immediate fetch, then every 3s for demo purpuses 
      fetchData();
      stopPolling();
      timer = setInterval(fetchData, 3000);
      updateTime();
    }
  </script>
</body>
</html>
